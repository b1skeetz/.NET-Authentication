@page "/login"
@using System.Net
@using System.Text.Json
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Components.Authorization
@using RegistrationPractice.UI.Services.Http
@using RegistrationPractice.WebApi.Contracts.Models
@inject IBackendApi BackendApi
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationState
<h3>Login</h3>

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            You are already authorized!
        </Authorized>
        <NotAuthorized>
            <MudContainer>
                <MudForm Model="_request">
                    <MudGrid>
                        <MudItem xs="12" md="12">
                            <MudCard Elevation="10">
                                <MudCardHeader>
                                    <CardHeaderContent>
                                        <MudText Typo="Typo.h6">Авторизация</MudText>
                                    </CardHeaderContent>
                                </MudCardHeader>
                            </MudCard>
                            <MudTextField T="string"
                                          InputType="InputType.Email"
                                          @bind-Value="_request.Email"
                                          Label="Введите логин"
                                          Variant="Variant.Filled"/>
                            <MudTextField T="string"
                                          InputType="InputType.Password"
                                          @bind-Value="_request.Password"
                                          Label="Введите пароль"
                                          Variant="Variant.Filled"/>
                            <MudButton Variant="Variant.Filled" Size="Size.Medium" Color="Color.Primary" OnClick="Authenticate">
                                Войти
                            </MudButton>
                            <MudText Style="color: red" hidden="@_isLoginPassed">Incorrect login or password! Try again.</MudText>
                        </MudItem>
                    </MudGrid>
                </MudForm>
            </MudContainer>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {
    private string _redirectUrl = string.Empty;
    private bool _isLoginPassed = true;
    
    protected override async Task OnInitializedAsync()
    {
        var currentUser = await AuthenticationState.GetAuthenticationStateAsync();
        if (currentUser.User.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/home");
        }
    }

    UserModel _request = new()
    {
        Email = "",
        Password = ""
    };

    private async Task Authenticate()
    {
        _redirectUrl = "/home";
        //_redirectUrl = _redirectUrl.Replace("\"", "");
        var response = await BackendApi.GetAuthenticated("/home", _request);
        if (response.StatusCode == HttpStatusCode.Unauthorized)
        {
            _isLoginPassed = false;
            StateHasChanged();
            return;
        }
        _isLoginPassed = true;
        StateHasChanged();
        if (response.Content.Token != "") // InternalServerError
        {
            await LocalStorage.SetItemAsync("user", response.Content);
        } 
        NavigationManager.NavigateTo(_redirectUrl);
    }

}